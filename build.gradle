buildscript {
    ext {
        restdocsApiSpecVersion = '0.16.2'
    }
}
plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
    id 'org.asciidoctor.convert' version '1.5.3'
}

group = 'com.feelmycode.parabole'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'mysql:mysql-connector-java'
    implementation 'junit:junit:4.13.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

bootJar {
    dependsOn asciidoctor

    copy {
        from "build/generated_snippets"
        into "src/main/resources/static/docs/"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//openapi3 {
//    server = 'http://localhost:8080'
//    title = 'The Parabole'
//    description = 'The Parabole API description'
//    version = '0.1.0'
//    format = 'yml'
//    outputDirectory = "."
//    outputFileNamePrefix = "swagger"
//    copy {
//        from "build/api-spec"
//        into "src/main/resources/static/docs"
//    }
//}

processResources.dependsOn('ymlSecurity')

task ymlSecurity(type: Copy) {
    from './src/main/resources/submodule-security'
    include '*.yml'
    into './src/main/resources'
}
